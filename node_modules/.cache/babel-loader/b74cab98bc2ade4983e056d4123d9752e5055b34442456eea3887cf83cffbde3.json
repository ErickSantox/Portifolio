{"ast":null,"code":"// Mock data for Erick Santos Portfolio\nimport darkAddExpense from './assets/images/dark-add-expense.png';\nimport dashboardImg from './assets/images/dark-Dashboard.png';\nimport darkEditExpense from './assets/images/dark-edit-expense.png';\nimport darkHistoryWithPremium from './assets/images/dark-history-with-premium.png';\nimport loginImg from './assets/images/dark-login.png';\nimport codigoImp from './assets/images/codigo.png';\nimport diagramaImp from './assets/images/diagrama.png';\nimport codigoIugu from './assets/images/codigoIugu.png';\nexport const mockData = {\n  hero: {\n    name: \"Erick Santos\",\n    title: \"Desenvolvedor Fullstack\",\n    subtitle: \"Java Backend\",\n    description: \"2 anos de experiência criando soluções robustas e escaláveis, com expertise em backend Java/C# e desenvolvimento web completo.\",\n    resumeUrl: \"/assets/Cv_Erick_SantosPdf.pdf\"\n  },\n  skills: {\n    backend: [\"Java 17\", \"Spring Boot\", \"Spring Security\", \"JWT & OAuth\", \"C# (.NET)\", \"ASP.NET\"],\n    frontend: [\"Angular\", \"TypeScript\", \"Ionic\"],\n    database: [\"SQL Server\", \"PostgreSQL\"],\n    tools: [\"JUnit\", \"Postman\", \"Git & GitHub\"],\n    concepts: [\"API REST\", \"RESTful\", \"SOAP\"]\n  },\n  projects: [{\n    id: 1,\n    name: \"Pobre Fino\",\n    subtitle: \"Aplicativo de Controle Financeiro\",\n    description: \"Desenvolvimento fullstack de uma aplicação mobile com boas práticas de JPA, segurança JWT e criptografia. API para envio assíncrono de e-mails e cálculos automáticos de saldo mensal.\",\n    features: [\"Interface mobile com Angular + Ionic\", \"Dashboard histórico interativo\", \"Login biométrico\", \"Notificações automáticas para despesas programadas\"],\n    technologies: [\"Java 17\", \"Spring Boot\", \"Angular\", \"TypeScript\", \"Ionic\", \"PostgreSQL\"],\n    images: [loginImg, darkHistoryWithPremium, dashboardImg, darkAddExpense, darkEditExpense, darkHistoryWithPremium],\n    category: \"Mobile Development\",\n    status: \"Concluído\"\n  }, {\n    id: 2,\n    name: \"Automatizador de Processos (Migração AVA)\",\n    subtitle: \"Aplicação Desktop .NET para Processamento de Dados\",\n    description: \"Desenvolvi uma ferramenta desktop em C# para automatizar a importação e validação de dados de presença em eventos a partir de planilhas Excel. O sistema valida cruzando informações de duas fontes de dados (inscrição e participação), garantindo a consistência antes de integrá-los ao sistema principal via API.\",\n    features: [\"Leitura e parsing de arquivos .xls e .xlsx com a biblioteca NPOI.\", \"Validação de regras de negócio complexas para garantir a integridade dos dados.\", \"Redução drástica de tempo no processo (de horas para minutos).\", \"Interface intuitiva para seleção de arquivos e acompanhamento do processo.\", \"Geração automática de logs de erro para auditoria e fácil depuração.\"],\n    technologies: [\"C#\", \".NET Framework\", \"Windows Forms\", \"NPOI (Excel API)\", \"SQL Server\"],\n    images: [codigoImp, diagramaImp],\n    category: \"Desktop Automation\",\n    status: \"Em Produção\"\n  }, {\n    id: 3,\n    name: \"Serviço de Integração de Pagamentos\",\n    subtitle: \"Backend C# para Sincronização de Dados Financeiros\",\n    description: \"Desenvolvi um worker service em C# para automatizar a extração diária de dados financeiros da API de pagamentos IUGU. O serviço é responsável por buscar, processar e sincronizar as faturas de 8 subcontas com o Data Warehouse da empresa, garantindo a consistência e atualização dos dados para análise.\",\n    features: [\"Comunicação com API REST externa utilizando RestClient.\", \"Implementação de paginação para lidar com grandes volumes de dados de forma eficiente.\", \"Lógica de 'retry' (3 tentativas) para garantir a resiliência contra falhas temporárias na API.\", \"Operação de 'Upsert' no banco de dados (SQL Server) para inserir novos registros ou atualizar existentes.\", \"Funções auxiliares para tratamento e limpeza de dados monetários em diferentes formatos.\"],\n    technologies: [\"C#\", \".NET\", \"API REST\", \"Newtonsoft.Json\", \"SQL Server\"],\n    images: [codigoIugu],\n    category: \"Backend Service\",\n    status: \"Em Produção\"\n  }],\n  experience: {\n    years: \"2\",\n    companies: [\"SEICHO NO IE DO BRASIL\"],\n    specialties: [\"Backend C#\", \"ASP.NET\", \"API RESTful\", \"API SOAP\", \"Database Design\", \"SQL Server\", \"JavaScript\", \"RDLC\"]\n  },\n  contact: {\n    email: \"ericksantosjobs@gmail.com\",\n    linkedin: \"https://www.linkedin.com/in/erick-santos-62271419a/\",\n    github: \"https://github.com/ErickSantox\",\n    instagram: \"@santx.erick\"\n  }\n};","map":{"version":3,"names":["darkAddExpense","dashboardImg","darkEditExpense","darkHistoryWithPremium","loginImg","codigoImp","diagramaImp","codigoIugu","mockData","hero","name","title","subtitle","description","resumeUrl","skills","backend","frontend","database","tools","concepts","projects","id","features","technologies","images","category","status","experience","years","companies","specialties","contact","email","linkedin","github","instagram"],"sources":["C:/Users/erick/OneDrive/Área de Trabalho/Projetos/Portifolio-Erick/src/mock.js"],"sourcesContent":["// Mock data for Erick Santos Portfolio\r\nimport darkAddExpense from './assets/images/dark-add-expense.png'\r\nimport dashboardImg from './assets/images/dark-Dashboard.png'\r\nimport darkEditExpense from './assets/images/dark-edit-expense.png'\r\nimport darkHistoryWithPremium from './assets/images/dark-history-with-premium.png'\r\nimport loginImg from './assets/images/dark-login.png'\r\nimport codigoImp from './assets/images/codigo.png'\r\nimport diagramaImp from './assets/images/diagrama.png'\r\nimport codigoIugu from './assets/images/codigoIugu.png'\r\n\r\n\r\n\r\n\r\n\r\nexport const mockData = {\r\n  hero: {\r\n    name: \"Erick Santos\",\r\n    title: \"Desenvolvedor Fullstack\",\r\n    subtitle: \"Java Backend\",\r\n    description: \"2 anos de experiência criando soluções robustas e escaláveis, com expertise em backend Java/C# e desenvolvimento web completo.\",\r\n    resumeUrl: \"/assets/Cv_Erick_SantosPdf.pdf\"\r\n  },\r\n  \r\n  skills: {\r\n    backend: [\r\n      \"Java 17\",\r\n      \"Spring Boot\", \r\n      \"Spring Security\",\r\n      \"JWT & OAuth\",\r\n      \"C# (.NET)\",\r\n      \"ASP.NET\"\r\n    ],\r\n    frontend: [\r\n      \"Angular\",\r\n      \"TypeScript\", \r\n      \"Ionic\"\r\n    ],\r\n    database: [\r\n      \"SQL Server\",\r\n      \"PostgreSQL\"\r\n    ],\r\n    tools: [\r\n      \"JUnit\",\r\n      \"Postman\",\r\n      \"Git & GitHub\"\r\n    ],\r\n    concepts: [\r\n      \"API REST\",\r\n      \"RESTful\",\r\n      \"SOAP\"\r\n    ]\r\n  },\r\n\r\n  projects: [\r\n    {\r\n      id: 1,\r\n      name: \"Pobre Fino\",\r\n      subtitle: \"Aplicativo de Controle Financeiro\",\r\n      description: \"Desenvolvimento fullstack de uma aplicação mobile com boas práticas de JPA, segurança JWT e criptografia. API para envio assíncrono de e-mails e cálculos automáticos de saldo mensal.\",\r\n      features: [\r\n        \"Interface mobile com Angular + Ionic\",\r\n        \"Dashboard histórico interativo\",\r\n        \"Login biométrico\",\r\n        \"Notificações automáticas para despesas programadas\"\r\n      ],\r\n      technologies: [\"Java 17\", \"Spring Boot\", \"Angular\", \"TypeScript\", \"Ionic\", \"PostgreSQL\"],\r\n      images: [\r\n        loginImg,\r\n        darkHistoryWithPremium,\r\n        dashboardImg,\r\n        darkAddExpense,\r\n        darkEditExpense,\r\n        darkHistoryWithPremium\r\n      ],\r\n      category: \"Mobile Development\",\r\n      status: \"Concluído\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Automatizador de Processos (Migração AVA)\",\r\n      subtitle: \"Aplicação Desktop .NET para Processamento de Dados\",\r\n      description: \"Desenvolvi uma ferramenta desktop em C# para automatizar a importação e validação de dados de presença em eventos a partir de planilhas Excel. O sistema valida cruzando informações de duas fontes de dados (inscrição e participação), garantindo a consistência antes de integrá-los ao sistema principal via API.\",\r\n      features: [\r\n        \"Leitura e parsing de arquivos .xls e .xlsx com a biblioteca NPOI.\",\r\n        \"Validação de regras de negócio complexas para garantir a integridade dos dados.\",\r\n        \"Redução drástica de tempo no processo (de horas para minutos).\",\r\n        \"Interface intuitiva para seleção de arquivos e acompanhamento do processo.\",\r\n        \"Geração automática de logs de erro para auditoria e fácil depuração.\"\r\n      ],\r\n      technologies: [\"C#\", \".NET Framework\", \"Windows Forms\", \"NPOI (Excel API)\", \"SQL Server\"],\r\n      images: [\r\n        codigoImp,\r\n        diagramaImp\r\n      ],\r\n      category: \"Desktop Automation\",\r\n      status: \"Em Produção\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Serviço de Integração de Pagamentos\",\r\n      subtitle: \"Backend C# para Sincronização de Dados Financeiros\",\r\n      description: \"Desenvolvi um worker service em C# para automatizar a extração diária de dados financeiros da API de pagamentos IUGU. O serviço é responsável por buscar, processar e sincronizar as faturas de 8 subcontas com o Data Warehouse da empresa, garantindo a consistência e atualização dos dados para análise.\",\r\n      features: [\r\n        \"Comunicação com API REST externa utilizando RestClient.\",\r\n        \"Implementação de paginação para lidar com grandes volumes de dados de forma eficiente.\",\r\n        \"Lógica de 'retry' (3 tentativas) para garantir a resiliência contra falhas temporárias na API.\",\r\n        \"Operação de 'Upsert' no banco de dados (SQL Server) para inserir novos registros ou atualizar existentes.\",\r\n        \"Funções auxiliares para tratamento e limpeza de dados monetários em diferentes formatos.\"\r\n      ],\r\n      technologies: [\"C#\", \".NET\", \"API REST\", \"Newtonsoft.Json\", \"SQL Server\"],\r\n      images: [\r\n        codigoIugu\r\n      ],\r\n      category: \"Backend Service\",\r\n      status: \"Em Produção\"\r\n    }\r\n  ],\r\n\r\n  experience: {\r\n  years: \"2\",\r\n  companies: [\"SEICHO NO IE DO BRASIL\"],\r\n  specialties: [\"Backend C#\", \"ASP.NET\",\"API RESTful\" ,\"API SOAP\", \"Database Design\", \"SQL Server\", \"JavaScript\", \"RDLC\"]\r\n  },\r\n\r\n  contact: {\r\n    email: \"ericksantosjobs@gmail.com\",\r\n    linkedin: \"https://www.linkedin.com/in/erick-santos-62271419a/\",\r\n    github: \"https://github.com/ErickSantox\",\r\n    instagram: \"@santx.erick\"\r\n  },\r\n\r\n\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}